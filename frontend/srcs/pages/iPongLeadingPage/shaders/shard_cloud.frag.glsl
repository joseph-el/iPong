export default "\nuniform sampler2D backgroundMap;\nuniform sampler2D textureMap;\nuniform sampler2D videoMap;\n\nvarying float opacity;\nvarying vec3 textureBlend;\nvarying vec2 directUV;\nvarying vec4 screenPosition;\nvarying vec3 screenNormal;\n\nvoid main() {\n    // Transforming normal and position into screenspace\n    vec3 normal = normalize(screenNormal);\n    vec2 screenUV = ((screenPosition.xy / screenPosition.w) * 0.4 + normal.xy * 0.1) + 0.5;\n\n    // Gloss values for alpha and mixing\n    float lighten = smoothstep(0.6, 1.0, clamp(dot(normal, normalize(vec3(1.0, 1.0, 1.0))), 0.0, 1.0));\n    float direct = smoothstep(0.2, 0.9, clamp(dot(normal, vec3(0.0, 0.0, 1.0)), 0.0, 1.0));\n\n    // Sampling texture atlases\n    vec3 background = texture(backgroundMap, screenUV).rgb;\n    vec3 diffuseTex = texture(textureMap, directUV).rgb;\n    vec3 diffuseVid = texture(videoMap, directUV).rgb;\n    background = background * 1.3 + vec3(0.01, 0.025, 0.05);\n\n    // Computing final color by weights from vertex shader\n    float alpha = opacity;\n    vec3 color =\n        background * textureBlend.x +\n        diffuseTex * textureBlend.y +\n        diffuseVid * textureBlend.z;\n\n    // Adding gloss\n    color += lighten * 0.1;\n    alpha *= direct * 0.4 + 0.6;\n\n    // Final color\n    gl_FragColor = vec4(color, alpha);\n}\n";